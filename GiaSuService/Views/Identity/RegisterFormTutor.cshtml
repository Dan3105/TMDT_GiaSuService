@using GiaSuService.Configs;
@using GiaSuService.Models.TutorViewModel


@model FormRegisterTutorRequestViewModel
@{
    ViewData["Title"] = "Trang đăng ký tài khoản gia sư";
}

<h1>Đăng ký tài khoản gia sư</h1>

<form asp-action="RegisterFormTutor" asp-controller="Identity" method="post" enctype="multipart/form-data">
    @* ----------------------------------Account Information------------------------------------------ *@
    <input type="hidden" asp-for="AccountProfile!.Avatar">
    <input type="hidden" asp-for="AccountProfile!.FrontIdentityCard" />
    <input type="hidden" asp-for="AccountProfile!.BackIdentityCard" />

    @* Avatar *@
    <div class="form-group">
        <label for="Avatar" class="customstyle-label">Ảnh đại diện:</label>
        <img id="avatar" src="" width="200" height="200" alt="Chưa upload ảnh" />

        <input id="newAvatar" type="file" class="form-control customform-control" style="display: none;"
               name="avatar" accept="image/*" onchange="previewImage('newAvatar', 'avatar', 'avatarMsg')" />
        <button type="button" id="changeAvatar" class="btn btn-primary customstyle-button"
                onclick="changeImage('newAvatar')">
            Chọn ảnh
        </button>

        <span id="avatarMsg" style="display: none" class="text-danger">Vui lòng upload ảnh đại diện</span>
    </div>

    @* Name, Birthday, Gender *@
    <div class="form-group">
        <label for="fullName">Họ và tên:</label>
        <input type="text" class="form-control customform-control" id="fullName" placeholder="Nhập tên đầy đủ của bạn" asp-for="AccountProfile!.FullName">
        @Html.ValidationMessageFor(model => model.AccountProfile!.FullName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label for="birthDate">Ngày sinh:</label>
        @Html.TextBoxFor(model => model.AccountProfile!.BirthDate, "{0:yyyy-MM-dd}", new { @type = "date", @class="form-control customform-control" })
        @Html.ValidationMessageFor(model => model.AccountProfile!.BirthDate, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label for="gender">Giới tính:</label>
        <select class="form-control customform-control" id="gender" asp-for="AccountProfile!.Gender">
            <option value="M">Nam</option>
            <option value="F">Nữ</option>
        </select>
        @Html.ValidationMessageFor(model => model.AccountProfile!.Gender, "", new { @class = "text-danger" })
    </div>

    @* Email *@
    <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" class="form-control customform-control" id="email" placeholder="Nhập địa chỉ email của bạn" asp-for="AccountProfile!.Email">
        @Html.ValidationMessageFor(model => model.AccountProfile!.Email, "", new { @class = "text-danger" })
    </div>
    
    @* Phone *@
    <div class="form-group">
        <label for="phone">Số điện thoại:</label>
        <input type="tel" class="form-control customform-control" id="phone" placeholder="Nhập số điện thoại của bạn" asp-for="AccountProfile!.Phone">
        @Html.ValidationMessageFor(model => model.AccountProfile!.Phone, "", new { @class = "text-danger" })
    </div>

    @* Identity card number *@
    <div class="form-group">
        <label for="identityCard">CCCD/CMND:</label>
        <input type="text" class="form-control customform-control" id="identityCard" placeholder="Nhập số căn cước của bạn" asp-for="AccountProfile!.IdentityCard">
        @Html.ValidationMessageFor(model => model.AccountProfile!.IdentityCard, "", new { @class = "text-danger" })
    </div>
    
    @* Identity card image *@
    <div class="form-group">
        <label for="identityCard" class="customstyle-label">Mặt trước CMND/ CCCD:</label>
        <img id="frontCard" src="@Model.AccountProfile!.FrontIdentityCard" width="250" height="150" alt="Chưa upload ảnh" />

        <input id="newFrontCard" type="file" class="form-control customform-control" style="display: none;"
               name="frontCard" accept="image/*" onchange="previewImage('newFrontCard', 'frontCard', 'frontCardMsg')" />
        <button type="button" id="changeFrontCard" class="btn btn-primary customstyle-button"
                onclick="changeImage('newFrontCard')">
            Chọn ảnh
        </button>

        <span id="frontCardMsg" style="display: none" class="text-danger">Vui lòng upload mặt trước của CMND/CCCD</span>
    </div>
    <div class="form-group">
        <label for="identityCard" class="customstyle-label">Mặt sau CMND/ CCCD:</label>
        <img id="backCard" src="@Model.AccountProfile!.BackIdentityCard" width="250" height="150" alt="Chưa upload ảnh" />

        <input id="newBackCard" type="file" class="form-control customform-control" style="display: none;"
               name="backCard" accept="image/*" onchange="previewImage('newBackCard', 'backCard', 'backCardMsg')" />
        <button type="button" id="changeBackCard" class="btn btn-primary customstyle-button"
                onclick="changeImage('newBackCard')">
            Chọn ảnh
        </button>

        <span id="backCardMsg" style="display: none" class="text-danger">Vui lòng upload mặt sau của CMND/CCCD</span>
    </div>


    @* Password *@
    <div class="form-group">
        <label for="password">Mật khẩu:</label>
        <input type="password" class="form-control customform-control" id="password" placeholder="Nhập mật khẩu của bạn" asp-for="AccountProfile!.Password">
        @Html.ValidationMessageFor(model => model.AccountProfile!.Password, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label for="confirmPassword">Xác nhận lại mật khẩu:</label>
        <input type="password" class="form-control customform-control" id="confirmPassword" placeholder="Nhập lại mật khẩu" asp-for="AccountProfile!.ConfirmPassword">
        @Html.ValidationMessageFor(model => model.AccountProfile!.ConfirmPassword, "", new { @class = "text-danger" })
    </div>   
    
    @* Province, District, AddressDetail *@
    <div class="form-group">
        <label for="province">Tỉnh:</label>
        <select class="form-select customform-control" id="province" onchange="getDistricts()">
            @if (Model.ListProvince != null)
            {
                <option id="provincedefault">Chọn tỉnh</option>
                @foreach (var province in Model.ListProvince)
                {
                    <option value="@province.ProvinceId">@province.ProvinceName</option>
                }
            }
        </select>
    </div>
    <div class="form-group">
        <label for="district">Quận/ Huyện:</label>
        <select class="form-select customform-control" id="districtSelectionContainer" asp-for="AccountProfile!.SelectedDistrictId">
            <option value="">Chọn quận</option>
        </select>
    </div>
    <div class="form-group">
        <label for="addressName">Địa chỉ:</label>
        <input type="text" class="form-control customform-control" id="addressName" placeholder="Địa chỉ chi tiết" asp-for="AccountProfile!.AddressName">
        @Html.ValidationMessageFor(model => model.AccountProfile!.AddressName, "", new { @class = "text-danger" })
    </div>


    @* ----------------------------------------------Tutor Profile----------------------------------------------------------------- *@
    <div class="form-group">
        <label for="addressName">Trường đào tạo:</label>
        <input type="text" class="form-control customform-control" id="collegeName" placeholder="Nhập tên trường" asp-for="RegisterTutorProfile!.College">
        @Html.ValidationMessageFor(model => model.RegisterTutorProfile!.College, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="addressName">Chuyên ngành:</label>
        <input type="text" class="form-control customform-control" id="areaName" placeholder="Nhập chuyên ngành bạn học" asp-for="RegisterTutorProfile!.Area">
        @Html.ValidationMessageFor(model => model.RegisterTutorProfile!.Area, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label>Niên khóa:</label>
        <div class="row">
            <div class="col-6">
                <label asp-for="RegisterTutorProfile!.AcademicYearFrom">Từ năm:</label>
                <input type="number" asp-for="RegisterTutorProfile!.AcademicYearFrom" class="form-control customform-control" required>
                <span asp-validation-for="RegisterTutorProfile!.AcademicYearFrom" class="text-danger"></span>
                @Html.ValidationMessageFor(model => model.RegisterTutorProfile!.AcademicYearFrom, "", new { @class = "text-danger" })
            </div>
            <div class="col-6">
                <label asp-for="RegisterTutorProfile!.AcademicYearto">Đến năm:</label>
                <input type="number" asp-for="RegisterTutorProfile!.AcademicYearto" class="form-control customform-control" required>
                @Html.ValidationMessageFor(model => model.RegisterTutorProfile!.AcademicYearto, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <label for="addressName">Loại gia sư:</label>
        <select class="form-control customform-control" id="typeTutor" asp-for="RegisterTutorProfile!.TypeTutorId">
            @if (Model.ListTutorType != null)
            {
                <option id="provincedefault">-Công việc hiện tại-</option>
                @foreach (var type in Model.ListTutorType)
                {
                    <option value="@type.TutorTypeId">@type.TypeName</option>
                }
            }
        </select>
        @Html.ValidationMessageFor(model => model.RegisterTutorProfile!.TypeTutorId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="addressName">Thông tin thêm:</label>
        <input type="text" data-val="false" class="form-control customform-control" id="additionalName" placeholder="Ghi chú" asp-for="RegisterTutorProfile.AdditionalInfo">
    </div>
    <hr />
    <div class="form-group">
        <label>Thời gian có thể dạy:</label>
        <div class="row row-cols-3">
            @for (int i = 0; i < Model.ListSessionDate.Count(); i++)
            {
                <div class="checkbox">
                    <label>
                        @Html.HiddenFor(m => m.ListSessionDate[i].SessionId)
                        @Html.CheckBoxFor(m => m.ListSessionDate[i].IsChecked, new {@class = "form-check-input customformcheck-input"})
                        @Model.ListSessionDate[i].SessionName
                    </label>
                </div>
            }
        </div>
    </div>
    <hr/>
    <div class="form-group">
        <label>Môn học có thể dạy:</label>
        <div class="row row-cols-3">
            @for (int i = 0; i < Model.ListSubject.Count(); i++)
            {
                <div class="checkbox">
                    <label>
                        @Html.HiddenFor(m => m.ListSubject[i].SubjectId)
                        @Html.CheckBoxFor(m => m.ListSubject[i].IsChecked, new {@class = "form-check-input customformcheck-input"})
                        @Model.ListSubject[i].SubjectName
                    </label>
                </div>
            }
        </div>
    </div>
    <hr />
    <div class="form-group">
        <label>Khối lớp có thể dạy:</label>
        <div class="row row-cols-3">
            @for (int i = 0; i < Model.ListGrade.Count(); i++)
            {
                <div class="checkbox">
                    <label>
                        @Html.HiddenFor(m => m.ListGrade[i].GradeId)
                        @Html.CheckBoxFor(m => m.ListGrade[i].IsChecked, new {@class = "form-check-input customformcheck-input"})
                        @Model.ListGrade[i].GradeName
                    </label>
                </div>
            }
        </div>
    </div>
    <hr/>
    <div class="form-group">
        <label>Khu vực có thể dạy:</label>
        <div class="row row-cols-3" id="districtCheckBoxes">
            
        </div>
    </div>
    <hr/>

    <div class="form-group">
            <label for="confirm-box">Đã đọc các <a href="https://www.youtube.com/watch?v=dQw4w9WgXcQ" target="_blank" class="text-decoration-none">điều khoản</a> trước khi đăng ký</label>
        <input class="form-check-input ms-1" id="confirm-box" type="checkbox" id="ConfirmBox" asp-for="ConfirmBox" required />
        <span asp-validation-for="ConfirmBox" class="text-danger"></span>
    </div>
    <div style="text-align: center !important;">
        <button type="submit" style="width: 30%;" class="btn btn-primary customstyle-button">Đăng ký</button>
    </div>
</form>

<!-- Include the loading panel -->
<partial name="_LoadingPanel" />

<script>

    document.addEventListener("DOMContentLoaded", function () {
        getDistricts(); // Call the getDistricts function when the view is first loaded
    });

    function getDistricts() {
        $("#provincedefault").remove();

        var selectedIdProvince = $("#province").val();
        $.ajax({
            url: `/Identity/Districts`,
            type: 'GET',
            dataType: "json",
            data: { 'provinceId': selectedIdProvince },
            success: function (data) {

                $("#districtSelectionContainer").empty(); // Replace the content with updated data
                $("#districtCheckBoxes").empty();

                for (var i = 0; i < data.length; i++) {
                    $("#districtSelectionContainer").append($('<option></option>').val(data[i].districtId).text(data[i].districtName));
                    var item = data[i];
                    var checkbox = `<input class="form-check-input customformcheck-input"
                                                type="checkbox"
                                                        name="ListDistrict[]"
                                                        id="checkbox_district_${item.districtId}"
                                                        value="${item.districtId}" ${item.isCheck ? "checked" : ""}/>`;

                    $("#districtCheckBoxes").append(`<div class="checkbox"><label> ${checkbox} ${item.districtName} </label> <div />`);

                }
            }
        });
    }

    // Validate again some field cannot check in model
    $(document).ready(function () {
        // Add a submit event listener to the form
        $("form").submit(function (event) {
            var canSubmit = true;

            // Check if both newFrontCard and newBackCard have files uploaded
            var avatarInput = document.getElementById('newAvatar');
            var frontCardInput = document.getElementById('newFrontCard');
            var backCardInput = document.getElementById('newBackCard');

            var avatarMsg = document.getElementById('avatarMsg');
            var frontCardMsg = document.getElementById('frontCardMsg');
            var backCardMsg = document.getElementById('backCardMsg');

            if (!avatarInput.files || avatarInput.files.length === 0){
                avatarMsg.style.display = "block";
                canSubmit = false;
            }

            if (!frontCardInput.files || frontCardInput.files.length === 0) {
                frontCardMsg.style.display = "block";
                canSubmit = false;
            }

            if (!backCardInput.files || backCardInput.files.length === 0) {
                backCardMsg.style.display = "block";
                canSubmit = false;
            }

            if (!canSubmit) {
                event.preventDefault(); // Prevent form submission

                // Show an alert or message
                alert('Vui lòng kiểm tra lại các dữ liệu đã nhập ở trên.'); 

                return false; // Stop form submission
            }

            document.getElementById('loadingPanel').style.display = 'flex';
            // Proceed with form submission if files are uploaded
            return true;
        });
    });

    // Add event when click button changeImage then show file explorer to choose new image
    function changeImage(inputId) {
        var input = document.getElementById(inputId);   //input file id
        if (input) {
            input.click(); // Trigger click on file input
        } else {
            console.error('File input with id "' + inputId + '" not found.');
        }
    }

    // Preview image on image tag after choosing a new image from input tag
    function previewImage(inputId, imageId, imageMsgId) {
        var input = document.getElementById(inputId);   //input file id
        var image = document.getElementById(imageId);   //image tag id
        var msg = document.getElementById(imageMsgId);   //image message upload id

        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                image.src = e.target.result;
            };
            reader.readAsDataURL(input.files[0]);
            msg.style.display = 'none';
        }
    }

</script>
