@using GiaSuService.Models.UtilityViewModel;

<script src="https://cdn.jsdelivr.net/npm/bootstrap-table@1.22.4/dist/bootstrap-table.min.js"></script>
<div class="container">
    <h1>Grade Manager</h1>

    <table id="gradeTable"
           data-pagination="true"
           data-height="500"
           class="table table-striped thead-light">
        <thead>
            <tr>
                <th data-field="gradeId" data-visible="false"></th>
                <th data-width="35" data-width-unit="%" data-field="gradeName">Khối lớp</th>
                <th data-width="15" data-width-unit="%" data-field="fee">Tiền phí</th>
                <th data-width="15" data-width-unit="%" data-field="value">Thứ tự</th>
                <th data-width="35" data-width-unit="%">Action</th>
            </tr>
        </thead>
        <tbody id="data-container">
        </tbody>
    </table>
</div>

<script>
    $(document).ready(function () {

        function actionFormatter(value, row, index) {
            return `
                            <button type="button" class="btn btn-sm btn-success add-button">Thêm</button>
                                <button type="button" class="btn btn-sm btn-primary customstyle-button edit-button" data-grade-id="${row.gradeId}">Chỉnh sửa</button>
                            <button type="button" class="btn btn-sm btn-danger delete-button" data-grade-id="${row.gradeId}">Xóa</button>
                        `;
        }

        function refreshTable() {
            $.ajax({
                url: '/Admin/GetGradeList',
                method: 'GET',
                success: function (data) {
                    $("#gradeTable").bootstrapTable('load', data);

                }
            })
        }

        $("#gradeTable").bootstrapTable({
            columns: [
                { field: 'gradeId', visible: false },
                { field: 'gradeName', title: 'Khối lớp' },
                {
                    field: 'fee', title: 'Tiền phí', formatter: function (value, row) {
                        // Format the value as VND currency (assuming data is in decimals)
                        return value.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                    }
                },
                { field: 'value', title: 'Thứ tự' },
                { field: 'actionButtons', title: 'Hành động', formatter: actionFormatter }
            ]
        });
        refreshTable();

        $(document).on('click', '.edit-button', function () {
            let $tr = $(this).closest('tr');
            let $tds = $tr.find('td');

            // Extract current values from the table cells
            let name = $tds.eq(0).text();
            let fee = extractFloatFromVND($tds.eq(1).text());
            let order = $tds.eq(2).text();
            let gradeId = $(this).data('grade-id');

            let originalData = $tr.html();
            $tr.html(`
                      <td><input type="text" class="form-control" name="gradeName" placeholder="Nhập khối" value="${name}"></td>
                      <td><input type="number" class="form-control" name="fee" placeholder="Nhập phí" step="1000" value="${fee}"></td>
                      <td><input type="number" class="form-control" min=1 name="value" placeholder="Enter Order" value="${order}"></td>
                      <td>
                        <button type="button" class="btn btn-success btn-sm submit-edit-button">Đồng ý</button>
                        <button type="button" class="btn btn-secondary btn-sm cancel-edit-button">Hủy bỏ</button>
                  </td>
                `);

            $tr.find('.cancel-edit-button').click(function () {
                $tr.html(originalData);
            });

            $tr.find('.submit-edit-button').click(function () {
                if (confirm("Bạn có chắc chắn muốn chỉnh sửa không?")) {
                    let formData = {
                        gradeName: $tr.find('input[name="gradeName"]').val(),
                        fee: $tr.find('input[name="fee"]').val(),
                        gradeId: gradeId,
                        value: $tr.find('input[name="value"]').val(),
                    };

                    $.ajax({
                        url: '/Admin/UpdateGrade',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(formData),
                        success: function (data) {
                            if (data.success) {
                                toastr["success"](data.message);
                            }
                            else {
                                toastr["error"](data.message);
                            }

                            refreshTable();
                        },
                        error: function (xhr, status, error) {
                            console.error('Error:', error);
                        }
                    });
                }
            })
        })


        $(document).on('click', '.delete-button', function () {
            if (confirm("Bạn có chắc chắn muốn xóa không?")) {
                var row = $(this).closest('tr');
                let gradeId = $(this).data('grade-id');
                $.ajax({
                    url: `/Admin/DeleteGrade/${gradeId}`,
                    method: 'DELETE',
                    contentType: 'application/json',
                    success: function (data) {
                        if (data.success) {
                            toastr["success"](data.message);
                            refreshTable();
                        }
                        else {
                            toastr["error"](data.message);
                        }

                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', error);
                    }
                });

                refreshTable();
            }

        })


        // Add Row Button Click
        $(document).on('click', '.add-button', function () {
            let $tr = $(this).closest('tr');
            let $tds = $tr.find('td');
            let order = parseInt($tds.eq(2).text()) + 1;
            var newRowHtml = `
                                        <tr>
                                                <td><input type="text" class="form-control" name="gradeName" placeholder="Enter Name"></td>
                                                <td><input type="number" step="1000" class="form-control" min=0 name="fee" placeholder="Enter Fee"></td>
                                                <td><input type="number" class="form-control" min=1 name="value" placeholder="Enter Order" value="${order}"></td>
                                            <td>
                                                <button type="button" class="btn btn-success btn-sm submit-add-button">Submit</button>
                                                <button type="button" class="btn btn-secondary btn-sm cancel-add-button">Cancel</button>
                                            </td>
                                        </tr>`;

            var $newRow = $tr.after(newRowHtml).next('tr');
            $newRow.find('.cancel-add-button').click(function () {
                $(this).closest('tr').remove();
            });

            $newRow.find('.submit-add-button').click(function () {
                if (confirm("Bạn có chắc chắn muốn thêm không?")) {
                    let formData = {
                        gradeName: $newRow.find('input[name="gradeName"]').val(),
                        value: $newRow.find('input[name="value"]').val(),
                        fee: $newRow.find('input[name="fee"]').val(),
                    };
                    $.ajax({
                        url: '/Admin/CreateGrade',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(formData),
                        success: function (data) {
                            if (data.success) {
                                toastr["success"](data.message);
                            }
                            else {
                                toastr["error"](data.message);
                            }

                            refreshTable();
                        },
                        error: function (xhr, status, error) {
                            console.error('Error:', error);
                        }
                    });
                }
            })
        });

    });

    function extractFloatFromVND(formattedFee) {
        return parseFloat(formattedFee.replace(/\D/g, '').replace(',', '.'));
    }
</script>

