@using GiaSuService.Models.EmployeeViewModel;
@model TutorRequestProfileEditViewModel;

<style>
    .disabled-link {
        pointer-events: none; /* Disable mouse events */
    }
</style>

<div class="container">
    <div id="list-tutor" class="row d-flex justify-content-center">
    </div>
    @if (Model.CurrentStatus == "pending")
    {
        <div class="d-flex justify-content-center">
            <a id="choose-tutor" class="btn btn-primary" href="@Url.Action("TutorList", "Home")">Chọn Gia sư</a>
        </div>
        <hr />
    }

    <h1>Đơn tìm gia sư</h1>

    <form asp-controller="Customer" method="post">
        <input type="hidden" asp-for="RequestId" />

        @if(Model.CurrentStatus != "pending")
        {
            <span class="text-danger">Đơn tìm gia sư không thể chỉnh sửa vì đã được duyệt. Vui lòng liên hệ nhân viên trung tâm để chỉnh sửa.</span>
        }

        <div class="form-group">
            <label asp-for="NStudents">Số lượng học sinh:</label>
            <input asp-for="NStudents" type="number" min="1" max="9" class="form-control customform-control" required />
            <span asp-validation-for="NStudents" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="AdditionalDetail">Thông tin bổ sung (Nếu có):</label>
            <textarea asp-for="AdditionalDetail" rows="5" class="form-control customform-control"></textarea>
        </div>
        <div class="form-group">
            <label for="province">Tỉnh/ Thành phố:</label>
            <select class="form-select customform-control" asp-for="ProvinceId" id="province" onchange="getDistricts()">
            </select>
        </div>

        <div class="form-group">
            <label>Quận:</label>
            <select id="district" asp-for="DistrictId" class="form-select customform-control">
                <option>Chọn quận</option>
            </select>
        </div>

        <div class="form-group">
            <label asp-for="Addressdetail">Địa chỉ chi tiết:</label>
            <input asp-for="Addressdetail" class="form-control customform-control" />
        </div>

        <div class="form-group">
            <label for="subject">Môn học:</label>
            <select asp-for="SubjectId" class="form-select" id="subject">
                @if (Model.Subjects != null)
                {
                    @foreach (var subject in Model.Subjects)
                    {
                        @if (subject.SubjectId == Model.SubjectId)
                        {
                            <option selected value="@subject.SubjectId">@subject.SubjectName</option>
                        }
                        else
                        {
                            <option value="@subject.SubjectId">@subject.SubjectName</option>
                        }
                    }
                }
            </select>
        </div>

        <div class="form-group">
            <label for="grade">Khối lớp:</label>
            <select asp-for="GradeId" class="form-select" id="grade">
                @if (Model.Grades != null)
                {
                    @foreach (var grade in Model.Grades)
                    {
                        @if (grade.GradeId == Model.GradeId)
                        {
                            <option selected value="@grade.GradeId">@grade.GradeName</option>
                        }
                        else
                        {
                            <option value="@grade.GradeId">@grade.GradeName</option>
                        }
                    }
                }
            </select>
        </div>

        <div class="form-group">
            <label>Thời gian dạy:</label>
            <div class="row row-cols-3">
                @for (int i = 0; i < Model.Sessions.Count(); i++)
                {
                    Model.Sessions[i].IsChecked = Model.SelectedBefore.Contains(Model.Sessions[i].SessionId);
                    <div class="checkbox">
                        <label>
                            @Html.HiddenFor(m => m.Sessions[i].SessionId)
                            @Html.CheckBoxFor(m => m.Sessions[i].IsChecked, new { @class = "form-check-input customformcheck-input" })
                            @Model.Sessions[i].SessionName
                        </label>
                    </div>
                }
            </div>
        </div>

        <div class ="form-group">
            <button type="submit" formaction="@Url.Action("UpdateTutorRequestEdit", "Customer")" class="btn btn-primary customstyle-button">Cập nhật</button>
            <button type="submit" formaction="@Url.Action("CancelTutorRequest", "Customer")" class="btn btn-danger">Hủy bỏ</button>
        </div>

        <br/>
        <div class="form-group">
            <h3>Danh sách các gia sư ứng tuyển</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Ảnh</th>
                        <th>Họ Tên</th>
                        <th>Thông tin chi tiết</th>
                        <th class="border-end">Trạng thái ứng tuyển</th>
                    </tr>
                </thead>

                <tbody id="tutor_container">

                </tbody>
            </table>
        </div>
    </form>
</div>

<script>
    function getDistricts() {
        $("#provincedefault").remove();

        var selectedIdProvince = $("#province").val();
        $.ajax({
            url: `/Identity/Districts`,
            type: 'GET',
            data: { 'provinceId': selectedIdProvince },
            success: function (data) {
                $("#district").empty(); // Replace the content with updated data
                for (var i = 0; i < data.length; i++) {
                    $("#district").append($('<option></option>').val(data[i].districtId).text(data[i].districtName));
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error fetching districts:", textStatus, errorThrown);
            }
        });
    }

    document.addEventListener("DOMContentLoaded", function () {
        firstLoad(); // Call the getProvinces function when the view is first loaded
        setEditMode();  //This function to set if TutorRequestForm is not pending or approval then user cannot update this form
        getTutorsQueue();
    });

    function setEditMode() {
        var status = "@Model.CurrentStatus";

        // Customer can edit pending request, approval request must communicate with employee to edit
        if (!(status == "pending")) {
            document.querySelectorAll('input').forEach(function (input) {
                input.disabled = true;
            });

            document.querySelectorAll('textarea').forEach(function (textarea) {
                textarea.disabled = true;
            });

            document.querySelectorAll('select').forEach(function (select) {
                select.disabled = true;
            });

            document.querySelectorAll('button').forEach(function (button) {
                button.disabled = true;
            });

            document.getElementById('choose-tutor').classList.add('disabled-link');
        }
    }


    function firstLoad() {
        var selectedProvinceId = "@Model.ProvinceId";
        $.ajax({
            url: `/Identity/Provinces`,
            type: 'GET',
            success: function (data) {
                $("#province").empty();
                for (var i = 0; i < data.length; i++) {
                    var option = $('<option></option>').val(data[i].provinceId).text(data[i].provinceName);
                    if (data[i].provinceId == selectedProvinceId) {
                        option.prop('selected', true);
                    }
                    $("#province").append(option);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error fetching provinces:", textStatus, errorThrown);
            }
        });

        var selectedDistrictId = "@Model.DistrictId";
        $.ajax({
            url: `/Identity/Districts`,
            type: 'GET',
            data: { 'provinceId': selectedProvinceId },
            success: function (data) {
                $("#district").empty();
                for (var i = 0; i < data.length; i++) {
                    var option = $('<option></option>').val(data[i].districtId).text(data[i].districtName);
                    if (data[i].districtId == selectedDistrictId) {
                        option.prop('selected', true);
                    }
                    $("#district").append(option);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error fetching districts:", textStatus, errorThrown);
            }
        });
    }

    $.ajax({
        url: `/Customer/GetTutorsSelectedInCookie`,
        success: function (data) {
            $("#list-tutor").empty();
            for (var i = 0; i < data.length; i++) {
                item = data[i];

                $("#list-tutor")
                    .append(`
                            <div id="${item.id}_view" class="col-md-4 mb-3">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center justify-content-between">
                                            <img src="${item.avatar}" alt="Avatar" class="img-fluid" style="width: 100px; height: 100px;">
                                            <div class="m-lg-2">
                                                <h5 class="card-text fs-6">Gia Sư: ${item.fullName} </h5>
                                                <p class= "card-text mb-1" > Tutor Type: ${item.tutorType} </p>
                                                <p class= "card-text mb-1" > College: ${item.college} </p>
                                                <p class="card-text mb-1">Area: ${item.area}</p>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="d-flex justify-content-center align-items-center mb-3">
                                         <a onclick="deleteTutor(${item.id})" class="btn btn-primary")">Hủy chọn</a>
                                    </div>
                                </div>
                            </div>
                            `)
            }
        }
    })

    function deleteTutor(id) {
        event.preventDefault();
        $.ajax({
            url: "/Customer/DeleteTutorRequest",
            type: "GET",
            data: { id: id },
            success: function () {
                $(`#${id}_view`).fadeOut("fast", function () { // Animate the removal
                    $(`#${id}_view`).remove();
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                // Handle network or server errors (optional)
                console.error("Error deleting tutor:", textStatus, errorThrown);
                alert("An error occurred while deleting the tutor.");
            }
        })
    }

    function getTutorsQueue() {
        let thisRequestId = @Model.RequestId;
        $.ajax({
            url: '/Customer/GetTutorsOnQueue',
            method: 'GET',
            data: { requestId: thisRequestId },
            success: function (response) {
                $("#tutor_container").empty();
                $.each(response.tutors, function (index, item) {
                    var currentStatus = item.statusQueue.toLowerCase();
                    var queueStatuses = response.queriesStatus.map(status => status.toLowerCase());
                    var href = item.isHaveTransaction ? `/Employee/TutorTransactionDetail?tutorId=${item.tutorId}&requestId=${thisRequestId}` : "#";
                    var aTagTransaction = `<a href="${href}" class="btn btn-info ${item.isHaveTransaction ? '' : 'disabled'}">Detail</a>`

                    var itemHtml = `<tr>
                                            <td><img src="${item.avatar}" alt="Avatar" style="width: 100px; height: 100px;" /></td>
                                            <td>
                                                <div>
                                                    <strong>${item.fullName}</strong><br/>
                                                    <span>Hiện đang là ${item.tutorType}</span>
                                                </div>
                                            </td>
                                            <td class="text-center"><a class="btn btn-info" href="/Employee/TutorProfile?id=${item.tutorId}">Detail</a></td>
                                            <td class="text-center text-capitalize border-end">${item.statusQueue}</td>
                                    </tr>`;
                    $("#tutor_container").append(itemHtml);
                })
            },
            error: function (xhr, status, error) {
                // Handle error if needed
                console.error('Error:', error);
            }
        })
    }
    getTutorsQueue();
    function updateTutorStatus(tutorId, requestId, selectId) {
        // Get the value of the selected option
        var selectedValue = document.getElementById(selectId).value;

        // Use the selectedValue as needed (e.g., send it to the server via AJAX)
        //console.log("Selected value:", selectedValue);

        // Call your function to update the tutor status passing the selected value, tutorId, and requestId
        $.ajax({
            url: '/Employee/UpdateTutorStatus',
            method: 'POST',
            data: { tutorId: tutorId, requestId: requestId, newStatus: selectedValue },
            success: function (data) {
                console.log(data);
                if (data.success) {
                    toastr["success"](data.message);
                }
                else {
                    toastr["error"](data.message);
                }
                getTutorsQueue();
            },
            error: function (xhr, status, error) {
                // Handle error if needed
                console.error('Error:', error);
            }
        })
    }
</script>