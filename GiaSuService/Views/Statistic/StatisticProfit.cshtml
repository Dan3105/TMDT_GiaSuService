@{
    ViewData["Title"] = "Thống kê thu nhập";
}
<div class="container">
    <div class="row">
        <h3>Tổng quan các giao dịch</h3>
        <div class="col-md-12 col-xl-6 row">
            <div class="col-md-12 col-xl-6 mb-3">
                <div class="card widget-card border-light shadow-sm">
                    <div class="card-body p-4">
                        <div class="d-flex align-items-center flex-column">
                            <p>
                                <i class="fas fa-exchange-alt me-2" style="color: hotpink; "></i><b>Số giao dịch</b>
                            </p>
                            <label></label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-xl-6 mb-3">
                <div class="card widget-card border-light shadow-sm">
                    <div class="card-body p-4">
                        <div class="d-flex align-items-center flex-column">
                            <p>
                                <i class="fas fa-chart-line me-2" style="color: green; "></i><b>Doanh thu</b>
                            </p>
                            <label></label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-xl-6 mb-3">
                <div class="card widget-card border-light shadow-sm">
                    <div class="card-body p-4">
                        <div class="d-flex align-items-center flex-column">
                            <p>
                                <i class="fa fa-piggy-bank me-2" style="color: blueviolet; "></i><b>Số tiền đặt cọc</b>
                            </p>
                            <label></label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-xl-6 mb-3">
                <div class="card widget-card border-light shadow-sm">
                    <div class="card-body p-4">
                        <div class="d-flex align-items-center flex-column">
                            <p>
                                <i class="fa fa-undo me-2" style="color: orange; "></i><b>Số tiền hoàn trả</b>
                            </p>
                            <label></label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6 col-xl-3">
            <canvas id="chartTransactionType"></canvas>
        </div>
        <div class="col-md-6 col-xl-3">
            <canvas id="chartTransactionStatus"></canvas>
        </div>
    </div>
    <div>
        <h3>Giao dịch theo ngày</h3>
        <div class="row">
            <div class="col-12 mb-3 row">
                <div class="col-3">
                    <select id="typeStatistic" class="form-select customform-control">
                        @* <option  value="this_week">Trong tuần này</option> *@
                        <option selected value="this_month">Trong tháng này</option>
                        <option value="custom">Chọn từ ngày</option>
                    </select>
                </div>
                <div class="col-3">
                    <input type="date" class="form-control customform-control" id="fromDateInput">
                </div>
                <div class="col-3">
                    <input type="date" class="form-control customform-control" id="toDateInput">
                </div>
                <div class="col-3">
                    <button onclick="buttonFetch()" class="btn btn-primary customstyle-button" type="button">Thống kê</button>
                </div>
            </div>
        </div>
        <div class="row">
            <h4>Tổng quan các giao dịch</h4>
            <div class="col-12 row">
                <div class="col-xl-4">
                    <div class="card widget-card border-light shadow-sm mb-3">
                        <div class="card-body p-4">
                            <div class="d-flex align-items-center flex-column chart-transaction">
                                <p>
                                    <i class="fas fa-chart-line me-2" style="color: green; "></i><b>Doanh thu</b>
                                </p>
                                <label></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-4">
                    <div class="card widget-card border-light shadow-sm mb-3">
                        <div class="card-body p-4">
                            <div class="d-flex align-items-center flex-column chart-transaction">
                                <p>
                                    <i class="fa fa-piggy-bank me-2" style="color: blueviolet; "></i><b>Tiền đặt cọc</b>
                                </p>
                                <label></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-4">
                    <div class="card widget-card border-light shadow-sm mb-3">
                        <div class="card-body p-4">
                            <div class="d-flex align-items-center flex-column chart-transaction">
                                <p>
                                    <i class="fa fa-undo me-2" style="color: orange; "></i><b>Tiền hoàn trả</b>
                                </p>
                                <label></label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <h4>Biểu đồ các giao dịch</h4>
            <div class="col-xl-6 col-md-12">
                <canvas id="chartTransaction"></canvas>
            </div>
            <div class="col-xl-3 col-md-6"><canvas id="chartDateTransactionType"></canvas></div>
            <div class="col-xl-3 col-md-6"><canvas id="chartDateTransactionStatus"></canvas></div>
        </div>
    </div>
</div>

<script>
    $.ajax({
        url: '/Statistic/GetChartDashboard',
        type: 'GET',
        success: function (data) {
            fillData(data);
        }
    });

    function fillData(data) {
        // Update text data
        const labels = document.querySelectorAll('.card-body label');
        labels[0].textContent = data.totalTransactions;
        labels[1].textContent = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(data.totalProfit);
        labels[2].textContent = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(data.totalDeposit);
        labels[3].textContent = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(data.totalRefund);

        // Parse JSON strings
        const transactionTypeData = JSON.parse(data.jsonTransactionType.replace(/True/g, "Phí nhận lớp").replace(/False/g, "Hoàn tiền"));
        const transactionStatusData = JSON.parse(data.jsonTransactionStatus);

        // Create pie charts
        createPieChart('chartTransactionType', transactionTypeData, 'Transaction Type', ['#007bff', '#28a745']);
        createPieChart('chartTransactionStatus', transactionStatusData, 'Transaction Status', ['#28a745', '#ffc107', '#dc3545']);
    }

    function createPieChart(canvasId, data, title, backgroundColor, position = 'bottom') {

        const canvas = document.getElementById(canvasId);

        // Check if chart already exists and destroy it
        const ctx = document.getElementById(canvasId).getContext('2d');
        const existingChart = Chart.getChart(canvas);
        if (existingChart) {
            existingChart.destroy();
        }

        new Chart(ctx, {
            type: 'pie',
            data: {
                labels: Object.keys(data),
                datasets: [{
                    data: Object.values(data),
                    backgroundColor: backgroundColor
                }]
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: title
                },
                legend: {
                    position: position
                }
            }
        });
    }


    //Init
    const selectElement = document.getElementById('typeStatistic');
    const fromDateInput = document.getElementById('fromDateInput');
    const toDateInput = document.getElementById('toDateInput');


    // Initially hide the input fields
    fromDateInput.style.display = 'none';
    toDateInput.style.display = 'none';

    // Event listener for select change
    selectElement.addEventListener('change', function () {
        const selectedValue = this.value;
        if (selectedValue === 'custom') {
            // Show the input fields
            fromDateInput.style.display = 'block';
            toDateInput.style.display = 'block';
        } else {
            // Hide the input fields
            fromDateInput.style.display = 'none';
            toDateInput.style.display = 'none';
        }
    });
    buttonFetch();
    function buttonFetch() {
        const type = selectElement.value;
        const fromDate = fromDateInput.value;
        const toDate = toDateInput.value;

        $.ajax({
            url: '/Statistic/GetChartProfitByDate',
            type: 'GET',
            data: {
                type: type,
                fromDate: fromDate,
                toDate: toDate
            },
            success: function (data) {
                fillTransactionCharts(data, type);
            }
        });
    }

    function fillTransactionCharts(data, type) {
        // Update total profit, refund, and deposit
        const numberFormatOptions = {
            style: 'currency',
            currency: 'VND',
            minimumFractionDigits: 0,
        };
        const labels_collection = document.querySelectorAll('.card-body .chart-transaction label');

        labels_collection[0].textContent = new Intl.NumberFormat('vi-VN', numberFormatOptions).format(data.totalProfit);
        labels_collection[1].textContent = new Intl.NumberFormat('vi-VN', numberFormatOptions).format(data.totalDeposit);
        labels_collection[2].textContent = new Intl.NumberFormat('vi-VN', numberFormatOptions).format(data.totalRefund);

        // Parse JSON strings
        const transactionStatusData = JSON.parse(data.jsonTransactionStatus);
        const transactionTypeData = JSON.parse(data.jsonTransactionType.replace(/True/g, "Phí nhận lớp").replace(/False/g, "Hoàn tiền"));
        const transactionData = JSON.parse(data.jsonTransaction);

        // Create pie charts for transaction status and type
        createPieChart('chartDateTransactionStatus', transactionStatusData, 'Transaction Status', ['#28a745', '#ffc107', '#dc3545'], 'right');
        createPieChart('chartDateTransactionType', transactionTypeData, 'Transaction Type', ['#007bff', '#28a745'], 'right');

        // Prepare data for transaction chart

        const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
        if (type === "this_week") {
            let chartData = new Map();
            daysOfWeek.forEach(p => {
                chartData.set(p, transactionData.hasOwnProperty(p) ? transactionData[p] : { "True": 0, "False": 0 });
            });
            // generateLineChart(chartData, 'chartCreateRequest', daysOfWeek);
            const labelsTransaction = chartData.keys();
            const trueData = [];
            const falseData = [];
            labelsTransaction.forEach(date => {
                const transactions = chartData.get(date);
                // console.log(transactions.True);
                trueData.push(transactions.True || 0);
                falseData.push(transactions.False || 0);
            });
 
            createDoubleBarChart('chartTransaction', daysOfWeek, trueData, falseData, 'Transactions', 'Ngày', 'Số tiền');

        }
        else {
            const labelsTransaction = Object.keys(transactionData);
            const trueData = [];
            const falseData = [];
            labelsTransaction.forEach(date => {
                const transactions = transactionData[date];
                trueData.push(transactions["True"] || 0);
                falseData.push(transactions["False"] || 0);
            });
            console.log(transactionData);
            // Create bar chart for transaction
            createDoubleBarChart('chartTransaction', labelsTransaction, trueData, falseData, 'Transactions', 'Ngày', 'Số tiền');
        }


    }

    function createDoubleBarChart(canvasId, labels, trueData, falseData, title, xLabel, yLabel) {
        const canvas = document.getElementById(canvasId);

        // Check if chart already exists and destroy it
        const existingChart = Chart.getChart(canvas);
        if (existingChart) {
            existingChart.destroy();
        }
        const ctx = canvas.getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Phí nhận lớp',
                    data: trueData,
                    backgroundColor: '#007bff'
                }, {
                    label: 'Hoàn tiền',
                    data: falseData,
                    backgroundColor: '#28a745'
                }]
            },
            options: {
                title: {
                    display: true,
                    text: title
                }
            }
        })
    };
</script>