@using GiaSuService.Models.TutorViewModel;
@using System.Security.Claims;
@using GiaSuService.Configs;

@model TutorRequestListViewModel;

@{
    ViewData["Title"] = "Danh sách các đơn đăng ký tìm gia sư";
}

@{
    bool isAuth = User.Identity?.IsAuthenticated ?? false; /* when having user login */
    var roleName = User.Claims.FirstOrDefault(p => p.Type == ClaimTypes.Role)?.Value;
    var tutorRoleName = AppConfig.TUTORROLENAME;
}

<div class="container">
    <partial name="SearchBar" />

    @* Filter bar *@
    <div class="row align-items-center justify-content-center">
        <div class="col-sm-6 d-flex justify-content-center mb-2">
            <select id="province" class="form-select customform-control" onchange="getDistricts(0)">
                @if (Model.ProvinceList != null)
                {
                    <option value="0" id="provincedefault">Chọn tỉnh</option>
                    @foreach (var province in Model.ProvinceList)
                    {
                        @if (Model.SelectedProvinceId == @province.ProvinceId)
                        {
                            <option value="@province.ProvinceId" selected>@province.ProvinceName</option>
                        }
                        else
                        {
                            <option value="@province.ProvinceId">@province.ProvinceName</option>
                        }
                    }
                }
            </select>
        </div>
        <div class="col-sm-6 d-flex justify-content-center mb-2">
            <select class="form-select customform-control" id="district">
                <option value="0">Chọn quận</option>
            </select>
        </div>
        <div class="col-sm-6 d-flex justify-content-center mb-2">
            <select class="form-select customform-control" id="subject">
                @if (Model.SubjectList != null)
                {
                    <option value="0" id="provincedefault">Chọn môn học</option>
                    @foreach (var province in Model.SubjectList)
                    {
                        <option value="@province.SubjectId">@province.SubjectName</option>
                    }
                }
            </select>
        </div>
        <div class="col-sm-6 d-flex justify-content-center mb-2">
            <select class="form-select customform-control" id="grade">
                @if (Model.GradeList != null)
                {
                    <option value="0" id="provincedefault">Chọn khối lớp</option>
                    @foreach (var province in Model.GradeList)
                    {
                        <option value="@province.GradeId">@province.GradeName</option>
                    }
                }
            </select>
        </div>
        <div class="col-sm-4 d-flex justify-content-center mb-2">
            <button type="button" class="btn btn-primary customstyle-button" onclick="updateNewList(false)">Lọc</button>
        </div>
    </div>

    
    <hr />

    <div id="items-container" class="row">
    </div>

    <div id="pagination">
        <button id="prev-page" class="border-0" onclick="prevPage()">
            <i class="fas fa-chevron-left px-2"></i>
        </button>

        <span id="current-page" class="px-2">Trang 1</span>

        <button id="next-page" class="border-0" onclick="nextPage()">
            <i class="fas fa-chevron-right px-2"></i>
        </button>
    </div>

</div>

<script>
    // First loading page
    document.addEventListener("DOMContentLoaded", function () {
        var selectedDistrictId = "@Model.SelectedDistrictId";
        getDistricts(selectedDistrictId);

        updateNewList(true);
    });

    function getDistricts(selectedDistrictId) {

        var selectedIdProvince = $("#province").val();
        $.ajax({
            url: `/Identity/Districts`,
            type: 'GET',
            data: { 'provinceId': selectedIdProvince },
            success: function (data) {
                $("#district").empty(); // Replace the content with updated data

                $("#district").append($('<option></option>').val(0).text('Chọn quận/ huyện'));
                $("#district").val(0);

                for (var i = 0; i < data.length; i++) {
                    var option = $('<option></option>').val(data[i].districtId).text(data[i].districtName);
                    if (data[i].districtId == selectedDistrictId) {
                        option.prop('selected', true);
                    }
                    $("#district").append(option);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error fetching districts:", textStatus, errorThrown);
            }
        });
    }

    var currentPage = 0;
    
    function loadItems(pageNumber, firstTime) {
        var selectedProvinceId = $('#province').val();
        var selectedDistrictId = $('#district').val();
        if (firstTime) {
            selectedDistrictId = "@Model.SelectedDistrictId"
        }
        var selectedIdSubject = $('#subject').val();
        var selectedIdGrade = $('#grade').val();

        var isAuth = "@isAuth";
        var roleName = "@roleName";
        var tutorRoleName = "@tutorRoleName";

        $.getJSON("/Tutor/GetTutorRequestBy", { provinceId: selectedProvinceId, districtId: selectedDistrictId, subjectId: selectedIdSubject, gradeId: selectedIdGrade, page: pageNumber })
            .done(function (data) {
                $("#items-container").empty(); // Clear existing items

                // Update page information
                $("#current-page").text(`Trang ${pageNumber + 1}`);
                // console.log('total pages ' + data.totalPages);

                // Disable "Next Page" button if at the last page
                $("#next-page").prop("disabled", data.page + 1 === data.totalPages || data.totalPages === 0);
                $("#prev-page").prop("disabled", data.page === 0);

                // Dynamically add items to the view
                $.each(data.queries, function (index, item) {
                    var additional_detail = item.additionalDetail ? item.additionalDetail : "Không có";
                
                    var itemHtml = `
                                <div class="col-md-4 col-sm-6 mb-3">
                                    <div class="card">
                                        <div class="card-header bg-light">
                                        <h5 class="card-title">Đơn chưa giao</h5>
                                        </div>
                                        <div class="card-body">
                                            <p class="card-text"><b>Mã đơn:</b> ${item.requestId}</p>
                                            <p class="card-text"><b>Môn học:</b> ${item.subjectName}</p>
                                            <p class="card-text"><b>Khối lớp:</b> ${item.gradeName}</p>
                                            <p class="card-text"><b>Thông tin thêm:</b> ${additional_detail}</p>
                                            <p class="card-text"><b>Địa điểm:</b> ${item.address}</p>
                                            <p class="card-text"><b>Các khung giờ có thể dạy:</b> ${item.sessionsCanTeach}</p>
                                            <p class="card-text"><b>Phí nhận lớp:</b> ${item.price.toLocaleString('vi-VN')} VNĐ VNĐ</p>
                                        </div>

                                        <div class="d-flex justify-content-end m-2">
                                            ${isAuth === "False" || roleName === tutorRoleName
                                                ? `<a href="#" class="register-btn btn btn-primary customstyle-button" onclick="registerRequest(${item.requestId})">Đăng ký ứng tuyển</a>`
                                                : ``
                                            }    
                                        </div>
                                    </div>

                                </div>

                                        `;
                    $("#items-container").append(itemHtml);
                });
            });
    };

    function registerRequest(requestId) {
        // Navigate to the controller action with the item Id as a parameter
        window.location.href = `/Tutor/ApplyRequest?requestId=${requestId}`;
    }

    function updateNewList(firstTime) {
        currentPage = 0;
        loadItems(currentPage, firstTime);
    }

    function prevPage() {
        if (!$("#prev-page").prop("disabled")) {
            currentPage--;
            loadItems(currentPage);
        }
    }

    function nextPage() {
        if (!$("#next-page").prop("disabled")) {
            currentPage++;
            loadItems(currentPage);
        }
    }

    function findById() {
        var requestId = document.getElementById('searchId').value;
        var isAuth = "@isAuth";
        var roleName = "@roleName";
        var tutorRoleName = "@tutorRoleName";
        // console.log('Searching for ID:', requestId);

        $.getJSON("/Home/GetTutorRequestById", { requestId: requestId })
            .done(function (data) {
                $("#items-container").empty(); // Clear existing items

                // Update page information
                $("#current-page").text(`Trang 1`);
                console.log(data);

                // Disable "Next Page" button if at the last page
                $("#next-page").prop("disabled", data.page + 1 === data.totalPages || data.totalPages === 0);
                $("#prev-page").prop("disabled", data.page === 0);

                // Dynamically add items to the view
                var item = data.queries;
                if (!item) {    //If there is no item, don't show anything
                    return;
                }

                var additional_detail = item.additionalDetail ? `<p class="card-text"><b>Thông tin bổ sung:</b> ${item.additionalDetail}</p>` : "Không có";

                var itemHtml = `
                <div class="col-md-4 col-sm-6 mb-3">
                    <div class="card">
                        <div class="card-header bg-light">
                        <h5 class="card-title">Đơn chưa giao</h5>
                        </div>
                        <div class="card-body">
                            <p class="card-text"><b>Mã đơn:</b> ${item.requestId}</p>
                            <p class="card-text"><b>Môn học:</b> ${item.subjectName}</p>
                            <p class="card-text"><b>Khối lớp:</b> ${item.gradeName}</p>
                                ${additional_detail}
                            <p class="card-text"><b>Địa điểm:</b> ${item.address}</p>
                            <p class="card-text"><b>Các khung giờ có thể dạy:</b> ${item.sessionsCanTeach}</p>
                            <p class="card-text"><b>Phí nhận lớp:</b> ${item.price.toLocaleString('vi-VN')} VNĐ VNĐ</p>
                        </div>

                        <div class="d-flex justify-content-end m-2">
                            ${isAuth === "False" || roleName === tutorRoleName
                                ? `<a href="#" class="register-btn btn btn-primary customstyle-button" onclick="registerRequest(${item.requestId})">Đăng ký ứng tuyển</a>`
                                : ``
                            }
                        </div>
                    </div>
                </div>
                        `;
                $("#items-container").append(itemHtml);
            });
    }

</script>
