@using GiaSuService.Models.IdentityViewModel
@using System.Security.Claims;
@using GiaSuService.Configs;
@using GiaSuService.Models.TutorViewModel;
@model TutorUpdateRequestViewModel

@{
    ViewData["Title"] = "Đơn cập nhật thông tin gia sư";
}

<div class="container">
    <form method="post" asp-action="UpdateProfile" asp-controller="Tutor" enctype="multipart/form-data">
        <h1>Đơn cập nhật thông tin gia sư</h1>
        <div class="row">
            <div class="col-md-4">
                <div style="text-align: center; display: flex; flex-direction: column; align-items: center;">
                    <img id="avatar" src="@Model.Form.Avatar" style="width: 200px; height: 200px;  margin-bottom: 10px;" alt="Ảnh đại diện" />

                    <input id="newAvatar" type="file" class="form-control customform-control" style="display: none;"
                           name="avatar" accept="image/*" onchange="previewImage('newAvatar', 'avatar')" />
                    <button type="button" id="changeAvatar" class="btn btn-primary customstyle-button"
                            onclick="changeImage('newAvatar')">
                        Chọn ảnh
                    </button>
                </div>
            </div>
            <div class="col-md-8">                
                <input type="hidden" asp-for="Form.TutorId" />
                @* Ensure if user do not update new image, old image will be kept *@
                <input type="hidden" asp-for="Form.Avatar" />
                <input type="hidden" asp-for="Form.FrontIdentityCard" />
                <input type="hidden" asp-for="Form.BackIdentityCard" />

                <div class="form-group">
                    <label asp-for="Form.IsActive">Trạng thái dạy học:</label>
                    <div class="form-check form-switch">
                        <input class="form-check-input customformcheck-input" type="checkbox" asp-for="Form.IsActive"
                               id="lockCheckbox" onchange="changeActiveStatus()" />
                        <label class="form-check-label" id="IsActiveLabel">
                            @if (@Model.Form.IsActive)
                            {
                                <span class="text-success">Đang hoạt động</span>
                            }
                            else
                            {
                                <span class="text-danger">Dừng hoạt động</span>
                            }
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Form.Fullname">Họ tên:</label>
                    <input type="text" asp-for="Form.Fullname" class="form-control customform-control" style="margin-bottom: 10px;"/>
                    @Html.ValidationMessageFor(model => model.Form.Fullname, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label asp-for="Form.Email">Email:</label>
                    <input type="text" asp-for="Form.Email" class="form-control customform-control" style="margin-bottom: 10px;" />
                    @Html.ValidationMessageFor(model => model.Form.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label asp-for="Form.Phone">Số điện thoại:</label>
                    <input type="text" asp-for="Form.Phone" class="form-control customform-control" style="margin-bottom: 10px;"/>
                    @Html.ValidationMessageFor(model => model.Form.Phone, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label asp-for="Form.Birth">Ngày sinh:</label>
                    <input type="date" asp-for="Form.Birth" class="form-control customform-control" style="margin-bottom: 10px;" value="@Model.Form.Birth?.ToString("yyyy-MM-dd")" />
                    @Html.ValidationMessageFor(model => model.Form.Birth, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label asp-for="Form.Gender">Giới tính:</label>
                    <select class="form-control customform-control" asp-for="Form.Gender" style="margin-bottom: 10px;">
                        <option value="M">Nam</option>
                        <option value="F">Nữ</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.Form.Gender, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <div class="form-group">
                        <label for="province">Tỉnh / Thành phố:</label>
                        <select class="form-select customform-control" asp-for="Form.SelectedProvinceId" id="province" onchange="getDistricts()" style="margin-bottom: 10px;">
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="district">Quận / Huyện:</label>
                        <select class="form-select customform-control" asp-for="Form.SelectedDistrictId" id="district" style="margin-bottom: 10px;">
                        </select>
                    </div>

                    <label asp-for="Form.AddressDetail">Số nhà, tên đường:</label>
                    <input type="text" asp-for="Form.AddressDetail" class="form-control customform-control" style="margin-bottom: 10px;" />
                    @Html.ValidationMessageFor(model => model.Form.AddressDetail, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label asp-for="Form.IdentityCard">Số CMND/CCCD:</label>
                    <input type="text" asp-for="Form.IdentityCard" class="form-control customform-control" style="margin-bottom: 10px;" >
                    @Html.ValidationMessageFor(model => model.Form.IdentityCard, "", new { @class = "text-danger" })
                </div>

                <div class="form-group" style="display:flex; flex-direction: row; justify-content: space-evenly">
                    <div style="text-align: center; display: flex; flex-direction: column; align-items: center;">
                        <label for="identityCard">Mặt trước CMND/ CCCD:</label>
                        <img id="frontCard" src="@Model.Form.FrontIdentityCard" width="250" height="150" alt="Hình mặt trước của CMND/CCCD" />

                        <input id="newFrontCard" type="file" class="form-control customform-control" style="display: none;"
                               name="frontCard" accept="image/*" onchange="previewImage('newFrontCard', 'frontCard')" />
                        <button type="button" id="changeFrontCard" class="btn btn-primary customstyle-button" style="margin-top:10px"
                                onclick="changeImage('newFrontCard')">
                            Chọn ảnh
                        </button>
                    </div>
                    <div style="text-align: center; display: flex; flex-direction: column; align-items: center;">
                        <label for="identityCard">Mặt sau CMND/ CCCD:</label>
                        <img id="backCard" src="@Model.Form.BackIdentityCard" width="250" height="150" alt="Hình mặt sau của CMND/CCCD" />

                        <input id="newBackCard" type="file" class="form-control customform-control" style="display: none;"
                               name="backCard" accept="image/*" onchange="previewImage('newBackCard', 'backCard')" />
                        <button type="button" id="changeFrontCard" class="btn btn-primary customstyle-button" style="margin-top:10px"
                                onclick="changeImage('newBackCard')">
                            Chọn ảnh
                        </button>
                    </div>
                </div>

                @* ----------------------------------------------Tutor Profile----------------------------------------------------------------- *@
                <div class="form-group">
                    <label asp-for="Form.College">Trường đào tạo:</label>
                    <input type="text" asp-for="Form.College" class="form-control customform-control" style="margin-bottom: 10px;">
                    @Html.ValidationMessageFor(model => model.Form.College, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label asp-for="Form.Area">Chuyên ngành:</label>
                    <input type="text" asp-for="Form.Area" class="form-control customform-control" style="margin-bottom: 10px;"/>
                    @Html.ValidationMessageFor(model => model.Form.Area, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Niên khóa:</label>
                    <div class="row">
                        <div class="col-6">
                            <label asp-for="Form.Academicyearfrom">Từ năm:</label>
                            <input type="number" asp-for="Form.Academicyearfrom" class="form-control customform-control" style="margin-bottom: 10px;">
                            @Html.ValidationMessageFor(model => model.Form.Academicyearfrom, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-6">
                            <label asp-for="Form.Academicyearto">Đến năm:</label>
                            <input type="number" asp-for="Form.Academicyearto" class="form-control customform-control" style="margin-bottom: 10px;">
                            @Html.ValidationMessageFor(model => model.Form.Academicyearto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Form.SelectedTutorTypeId">Loại gia sư:</label>
                    <select class="form-select" asp-for="Form.SelectedTutorTypeId" style="margin-bottom: 10px;">
                        @foreach(var tutortype in Model.TutorTypeList)
                        {
                            <option value="@tutortype.TutorTypeId">@tutortype.TypeName</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="Form.Additionalinfo">Thông tin thêm:</label>
                    <input type="text" asp-for="Form.Additionalinfo" class="form-control customform-control" style="margin-bottom: 10px;">
                </div>

                <div class="form-group">
                    <label>Thời gian có thể dạy:</label>
                    <div class="row row-cols-3">
                        @for (int i = 0; i < Model.SessionList.Count(); i++)
                        {
                            <div class="checkbox">
                                <label>
                                    @Html.HiddenFor(m => m.SessionList[i].SessionId)
                                    @Html.CheckBoxFor(m => m.SessionList[i].IsChecked, new { @class = "form-check-input customformcheck-input" })
                                    @Model.SessionList[i].SessionName
                                </label>
                            </div>
                        }
                    </div>
                </div>

                <div class="form-group">
                    <label>Môn học có thể dạy:</label>
                    <div class="row row-cols-3">
                        @for (int i = 0; i < Model.SubjectList.Count(); i++)
                        {
                            <div class="checkbox">
                                <label>
                                    @Html.HiddenFor(m => m.SubjectList[i].SubjectId)
                                    @Html.CheckBoxFor(m => m.SubjectList[i].IsChecked, new { @class = "form-check-input customformcheck-input" })
                                    @Model.SubjectList[i].SubjectName
                                </label>
                            </div>
                        }
                    </div>
                </div>

                <div class="form-group">
                    <label>Khối lớp có thể dạy:</label>
                    <div class="row row-cols-3">
                        @for (int i = 0; i < Model.GradeList.Count(); i++)
                        {
                            <div class="checkbox">
                                <label>
                                    @Html.HiddenFor(m => m.GradeList[i].GradeId)
                                    @Html.CheckBoxFor(m => m.GradeList[i].IsChecked, new { @class = "form-check-input customformcheck-input" })
                                    @Model.GradeList[i].GradeName
                                </label>
                            </div>
                        }
                    </div>
                </div> 

                 <div class="form-group">
                    <label>Khu vực có thể dạy:</label>
                    <div class="row row-cols-3" id="districtCheckBoxes">
                    </div>
                </div>
            </div>

            <div style="text-align: center;">
                <button type="submit" class="btn btn-primary customstyle-button w-25 mt-5" style="margin-top: 5px;">Cập nhật</button>
            </div>
        </div>
    </form>
</div>

<!-- Include the loading panel -->
<partial name="_LoadingPanel" />

<script>
    document.addEventListener("DOMContentLoaded", function () {
        firstLoad(); // Call the getProvinces function when the view is first loaded
        changeActiveStatus();
    });

    $(document).ready(function () {
        // Add a submit event listener to the form
        $("form").submit(function (event) {
            document.getElementById('loadingPanel').style.display = 'flex';
            // Proceed with form submission if files are uploaded
            return true;
        });
    });

    function changeActiveStatus() {
        var checkbox = document.getElementById("lockCheckbox");
        var label = document.getElementById("IsActiveLabel");

        checkbox.addEventListener("change", function () {
            if (checkbox.checked) {
                label.textContent = "Đang hoạt động";
                label.classList.add("text-success");
                label.classList.remove("text-danger");
            } else {
                label.textContent = "Dừng hoạt động";
                label.classList.remove("text-success");
                label.classList.add("text-danger");
            }
        });
    }

    function firstLoad() {
        var selectedProvinceId = "@Model.Form.SelectedProvinceId";

        $.ajax({
            url: `/Identity/Provinces`,
            type: 'GET',
            success: function (data) {
                $("#province").empty();
                for (var i = 0; i < data.length; i++) {
                    var option = $('<option></option>').val(data[i].provinceId).text(data[i].provinceName);
                    if (data[i].provinceId == selectedProvinceId) {
                        option.prop('selected', true);
                    }
                    $("#province").append(option);

                }
                getDistricts();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error fetching provinces:", textStatus, errorThrown);
            }
        });

    }

    function getDistricts() {
        var selectedProvinceId = $("#province").val();

        var selectedDistrictId = "@Model.Form.SelectedDistrictId";
        //console.log(selectedProvinceId);
        $.ajax({
            url: `/Identity/Districts`,
            type: 'GET',
            data: { 'provinceId': selectedProvinceId },
            success: function (data) {
                $("#district").empty();
                $("#districtCheckBoxes").empty();

                var selectedDistricts = @Html.Raw(Json.Serialize(Model.Form.SelectedDistricts))
                for (var i = 0; i < data.length; i++) {
                    item = data[i];
                    var option = $('<option></option>').val(item.districtId).text(item.districtName);
                    if (item.districtId == selectedDistrictId) {
                        option.prop('selected', true);
                    }
                    $("#district").append(option);
                    var isChecked = selectedDistricts.includes(item.districtId);
                    var checkbox = `<input class="form-check-input customformcheck-input"
                                            type="checkbox"
                                                    name="DistrictSelected[]"
                                                    id="checkbox_district_${item.districtId}"
                                                        value="${item.districtId}" ${isChecked ? "checked" : ""}/>`;

                    $("#districtCheckBoxes").append(`<div class="checkbox"><label> ${checkbox} ${item.districtName} </label> <div />`);
                }


            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error fetching districts:", textStatus, errorThrown);
            }
        });
    }


    // Add event when click button changeImage then show file explorer to choose new image
    function changeImage(inputId) {
        var input = document.getElementById(inputId);   //input file id
        if (input) {
            input.click(); // Trigger click on file input
        } else {
            console.error('File input with id "' + inputId + '" not found.');
        }
    }

    // Preview image on image tag after choosing a new image from input tag
    function previewImage(inputId, imageId) {
        var input = document.getElementById(inputId);   //input file id
        var image = document.getElementById(imageId);   //image tag id

        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                image.src = e.target.result;
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

</script>