@using GiaSuService.Configs;
@using GiaSuService.Models.EmployeeViewModel;
@using GiaSuService.Models.TutorViewModel;
@model TutorProfileStatusDetailHistoryViewModel
@{
    ViewData["Title"] = "Detail View";
}

@{
    // Define a dictionary to map property names to display names
    Dictionary<string, string> displayNameMapping = new Dictionary<string, string>()
    {
        // { "TutorId", "Tutor ID" },
        { "Fullname", "Họ Tên" },
        { "Birth", "Năm sinh" },
        { "Email", "Email" },
        { "Phone", "Số điện thoại" },
        { "Gender", "Giới tính" },
        { "Avatar", "Avatar" },
        // { "AddressDetail", "Address Detail" },
        { "IdentityCard", "Số Chứng minh thư" },
        // { "FrontIdentityCard", "Front Identity Card" },
        // { "BackIdentityCard", "Back Identity Card" },
        { "College", "Đại học" },
        { "Area", "Chuyên ngành" },
        // { "IsActive", "Is Active" },
        { "Additionalinfo", "Thông tin thêm" },
        { "Academicyearfrom", "Năm bắt đầu học" },
        { "Academicyearto", "Năm tốt nghiệp" },
        // { "SelectedTutorTypeId", "Selected Tutor Type ID" },
        { "FormatAddress", "Địa chỉ" },
        { "FormatTutorType", "Loại gia sư" },
        { "FormatTeachingArea", "Các khu vực có thể dạy" },
        { "FormatGrades", "Các khối có thể dạy" },
        { "FormatSessions", "Các buổi học có thể dạy" },
        { "FormatSubjects", "Các môn học có thể dạy" }
    };
}

<div class="container">
    <div>
        <dl>
            <dd>Ngày tạo:</dd>
            <dt>@Model.Date</dt>
        </dl>
    </div>
    <div>

        @if(Model.DetailModified is not null)
        {
            <div class="">
                <h2>Các thông tin đã thay đổi</h2>
                <ul class="list-unstyled">
                    @foreach (var property in typeof(TutorFormUpdateProfileViewModel).GetProperties())
                    {
                        if (!displayNameMapping.ContainsKey(property.Name)) continue;
                        var modifiedValue = property.GetValue(Model.DetailModified);

                        if (modifiedValue != null && !string.IsNullOrEmpty(modifiedValue.ToString()))
                        {
                            // Get the display name from the mapping, if it exists; otherwise, use the property name
                            var displayName = displayNameMapping[property.Name];

                            if (modifiedValue is int || modifiedValue is short)
                            {
                                int modifiedIntValue;
                                var modifiedValueParsed = int.TryParse(modifiedValue.ToString(), out modifiedIntValue);

                                if (modifiedValueParsed)
                                {
                                    if (modifiedIntValue != 0)
                                    {
                                        <li><strong>@displayName</strong>: @modifiedIntValue</li>
                                    }
                                }
                            }
                            else
                            {
                                <li><strong>@displayName</strong>: @modifiedValue</li>
                            }
                        }
                    }
                </ul>
            </div>
            @* <p>@Model.Context</p> *@

        }
    </div>
    <div>
        <a href="@Url.Action("TutorProfileStatusHistory", "Tutor")" class="btn btn-info customstyle-button">Quay lại</a>
    </div>
</div>
