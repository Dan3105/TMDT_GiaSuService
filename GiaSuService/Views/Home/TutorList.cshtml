@using GiaSuService.Models.TutorViewModel
@using GiaSuService.Configs;
@using System.Security.Claims;
@model TutorCardListViewModel
@{
    ViewData["Title"] = "Danh sách gia sư";
}

@{
    bool isAuth = User.Identity?.IsAuthenticated ?? false; /* when having user login */
    var roleName = User.Claims.FirstOrDefault(p => p.Type == ClaimTypes.Role)?.Value;
    var customerRoleName = AppConfig.CUSTOMERROLENAME;
}

<div class="container">
    <div class="row align-items-center justify-content-center">
        <div class="col-sm-6 d-flex justify-content-center mb-2">
            <select id="province" class="form-select customform-control" onchange="getDistricts()">
                @if (Model.ProvinceList != null)
                {
                    <option value="0" id="provincedefault">Chọn tỉnh / thành phố</option>
                    @foreach (var province in Model.ProvinceList)
                    {
                        <option value="@province.ProvinceId">@province.ProvinceName</option>
                    }
                }
            </select>
        </div>
        <div class="col-sm-6 d-flex justify-content-center mb-2">
            <select class="form-select customform-control" id="districtSelectionContainer">
                <option value="0">Chọn quận / huyện</option>
            </select>
        </div>
        <div class="col-sm-6 d-flex justify-content-center mb-2">
            <select class="form-select customform-control" id="subject">
                @if (Model.SubjectList != null)
                {
                    <option value="0" id="provincedefault">Chọn môn học</option>
                    @foreach (var province in Model.SubjectList)
                    {
                        <option value="@province.SubjectId">@province.SubjectName</option>
                    }
                }
            </select>
        </div>
        <div class="col-sm-6 d-flex justify-content-center mb-2">
            <select class="form-select customform-control" id="grade">
                @if (Model.GradeList != null)
                {
                    <option value="0" id="provincedefault">Chọn khối lớp</option>
                    @foreach (var province in Model.GradeList)
                    {
                        <option value="@province.GradeId">@province.GradeName</option>
                    }
                }
            </select>
        </div>
        <div class="col-sm-4 d-flex justify-content-center mb-2">
            <button type="button" class="btn btn-primary customstyle-button" onclick="updateNewList()">Tìm kiếm</button>
        </div>
    </div>
    <hr />
    <div id="items-container" class="row d-flex justify-content-center">
    </div>

    <div id="pagination">
        <button id="prev-page" class="border-0" onclick="prevPage()">
            <i class="fas fa-chevron-left px-2"></i>
        </button>

        <span id="current-page" class="px-2">Trang 1</span>

        <button id="next-page" class="border-0" onclick="nextPage()">
            <i class="fas fa-chevron-right px-2"></i>
        </button>
    </div>

</div>

<script>
    // First loading page
    document.addEventListener("DOMContentLoaded", function () {
        updateNewList();
    });

    function getDistricts() {

        var selectedIdProvince = $("#province").val();
        $.ajax({
            url: `/Identity/Districts`,
            type: 'GET',
            data: { 'provinceId': selectedIdProvince },
            success: function (data) {
                $("#districtSelectionContainer").empty(); // Replace the content with updated data

                if (selectedIdProvince == 0) {
                    $("#districtSelectionContainer").append($('<option></option>').val(0).text('Chọn quận / huyện'));
                    $("#districtSelectionContainer").val(0);
                }

                for (var i = 0; i < data.length; i++) {
                    $("#districtSelectionContainer").append($('<option></option>').val(data[i].districtId).text(data[i].districtName));
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error fetching districts:", textStatus, errorThrown);
            }
        });
    }
    
    var currentPage = 0;
    function loadItems(pageNumber) {
        var selectedIdDistrict = $('#districtSelectionContainer').val();
        var selectedIdSubject = $('#subject').val();
        var selectedIdGrade = $('#grade').val();

        var isAuth = "@isAuth";
        var roleName = "@roleName";
        var customerRoleName = "@customerRoleName";

        $.getJSON("/Home/GetTutorsBy", { districtId: selectedIdDistrict, gradeId: selectedIdGrade, subjectId: selectedIdSubject, page: pageNumber })
            .done(function (data) {
                $("#items-container").empty(); // Clear existing items

                // Update page information
                $("#current-page").text(`Trang ${pageNumber + 1}`);
                // console.log('total pages ' + data.totalPages);

                // Disable "Next Page" button if at the last page
                $("#next-page").prop("disabled", data.page + 1 === data.totalPages || data.totalPages === 0);
                $("#prev-page").prop("disabled", data.page === 0);

                // Dynamically add items to the view
                $.each(data.queries, function (index, item) {
                    //console.log(item);
                    var spanActive = item.lockStatus ? `<span class="text-danger">Tạm đóng</span>` : `<span class="text-success">Hoạt động</span>`;
                    var itemHtml = `
                                <div class="col-md-6 mb-3">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center justify-content-between">
                                            <img src="${item.avatar}" alt="Avatar" class="img-fluid" style="width: 200px; height: 200px;"/>
                                            <div class="m-lg-2">
                                                <h5 class="card-text fs-6">Gia Sư: ${item.fullName}</h5>
                                                <p class="card-text mb-1">Ngày sinh: ${item.birth}</p>
                                                <p class="card-text mb-1">Trình độ gia sư: ${item.tutorType}</p>
                                                <p class="card-text mb-1">Đại học: ${item.college}</p>
                                                <p class="card-text mb-1">Chuyên ngành: ${item.area}</p>
                                            </div>
                                        </div>
                                        <hr>
                                        <div class="row">
                                            <p class="card-text mb-1"><b>Năm tốt nghiệp :</b> ${item.graduateYear}</p>
                                        </div>
                                        <p class="card-text"><b>Môn học:</b> ${item.subjectList}</p>
                                            <p class="card-text"><b>Khối lớp:</b> ${item.gradeList}</p>
                                        <p class="card-text"><b>Khu vực dạy:</b> ${item.teachingArea}</p>
                                        <p class="card-text"><b>Thông tin thêm:</b> ${item.additionalProfile}</p>
                                        <div class="d-flex justify-content-center">
                                            ${isAuth === "False" || roleName === customerRoleName
                                                ? `<a class="btn btn-primary customstyle-button" href="/Customer/TutorRequestForm?tutorId=${item.id}">Chọn gia sư</a>`
                                                : ``
                                            }
                                                       
                                        </div>
                                    </div>
                                </div>
                            </div>
                                        `;
                    $("#items-container").append(itemHtml);
                });
            });
         }

    function updateNewList() {
        currentPage = 0;
        loadItems(currentPage);
    }

    function prevPage() {
        if (!$("#prev-page").prop("disabled")) {
            currentPage--;
            loadItems(currentPage);
        }
    }

    function nextPage() {
        if (!$("#next-page").prop("disabled")) {
            currentPage++;
            loadItems(currentPage);
        }
    }

</script>
